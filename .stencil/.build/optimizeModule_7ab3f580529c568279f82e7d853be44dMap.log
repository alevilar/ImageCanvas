{"version":3,"names":["OpcionTypes","canvasSetter","canvas","layer","mapeador","text","SetText","image","SetImage","barcode","SetBarcode","qr","SetQR","type","run","SeteoTipoCanvas","constructor","c","l","this","canvasContent","imgData","Image","src","any_string","onload","drawImage","x","y","width","height","fillStyle","canvasOptions","font","textAlign","fillText","console","log","imageCanvasCss","ImageCanvas","handlerLayerChange","__loadData","componentWillLoad","el","style","__createCanvas","appendChild","document","createElement","__resizeCanvas","offsetHeight","offsetWidth","ctx","getContext","data","layers","forEach"],"sources":["src/utils/CanvasSetters.ts","src/components/image-canvas/image-canvas.css?tag=image-canvas","src/components/image-canvas/image-canvas.tsx"],"sourcesContent":["import { ContentDataBarcode, ContentDataImg, ContentDataQR, ContentDataText, Layer } from \"../components/type\";\n\nexport enum OpcionTypes {\n    text= \"text\",\n    image = \"image\",\n    qr = \"qr\",\n    barcode = \"barcode\"\n}\n\nexport function canvasSetter( canvas:CanvasRenderingContext2D,layer:Layer ){\n    const mapeador = {\n        [OpcionTypes.text]:new SetText(canvas,layer as ContentDataText),\n        [OpcionTypes.image]:new SetImage(canvas,layer as ContentDataImg),\n        [OpcionTypes.barcode]:new SetBarcode(canvas,layer as ContentDataBarcode),\n        [OpcionTypes.qr]:new SetQR(canvas,layer as ContentDataQR)\n    }\n    return mapeador[layer.type].run()\n}\n\nabstract class SeteoTipoCanvas {\n    canvasContent: CanvasRenderingContext2D;\n    layer: Layer;\n\n    constructor(c:CanvasRenderingContext2D,l:Layer){\n        this.canvasContent = c;\n        this.layer = l;\n    }\n\n    run():void{}\n}\n\nclass SetImage extends SeteoTipoCanvas{\n    layer: ContentDataImg\n    run(){\n        const imgData = new Image();\n        imgData.src = this.layer.any_string;\n        imgData.onload = ()=> {\n            this.canvasContent.drawImage(imgData, this.layer.x, this.layer.y,this.layer.width,this.layer.height);\n        };\n    }\n}\n\nclass SetText extends SeteoTipoCanvas{\n    layer: ContentDataText\n    run(){\n        this.canvasContent.fillStyle = this.layer.canvasOptions.fillStyle;\n        this.canvasContent.font = this.layer.canvasOptions.font;\n        this.canvasContent.textAlign = this.layer.canvasOptions.textAlign as CanvasTextAlign;\n        this.canvasContent.fillText(this.layer.any_string, this.layer.x, this.layer.y);\n    }\n}\n\nclass SetQR extends SeteoTipoCanvas{\n    layer: ContentDataQR\n    run(){\n        console.log(this.layer)\n    }\n}\n\nclass SetBarcode extends SeteoTipoCanvas{\n    layer: ContentDataBarcode\n    run(){\n        console.log(this.layer)\n    }\n}\n\n\n",":host {\n  display: block;\n}","import { Component, Prop,State, Element, Watch } from '@stencil/core';\nimport { Layer } from '../type';\nimport { canvasSetter } from '../../utils/CanvasSetters';\n\n@Component({\n  tag: 'image-canvas',\n  styleUrl: 'image-canvas.css',\n})\nexport class ImageCanvas {\n\n  @Element() el: HTMLElement\n\n  /**\n   * Width en px\n   */\n  @Prop() width: string\n\n  /**\n   * Height en px\n   */\n  @Prop() height: string\n\n  /**\n   * Canvas fillStroke\n   */\n  @Prop() canvasFillStyle: string = 'black'\n\n  /**\n   * canvas.content \n   */\n  @Prop() layers: Layer[] = []\n  @Watch('layers')\n  handlerLayerChange(){\n    this.__loadData()\n  }\n\n  @State() imgLoading = true;\n  private canvas: HTMLCanvasElement\n\n  componentWillLoad(){\n    this.el.style.height = this.height\n    this.el.style.width = this.width\n    this.canvas = this.__createCanvas();\n\n    this.el.appendChild(this.canvas)\n    \n  }\n\n  __createCanvas() {\n    this.canvas = document.createElement('canvas')\n    this.__resizeCanvas();\n    return this.canvas\n  }\n\n  __resizeCanvas(){\n    this.canvas.height = this.el.offsetHeight;\n    this.canvas.width = this.el.offsetWidth;\n  }\n\n  __loadData() {\n       const ctx = this.canvas.getContext('2d');\n       let data = this.layers;\n       data.forEach(l => {\n         canvasSetter(ctx,l)\n       });\n  }\n\n}\n"],"mappings":"2CAEA,IAAYA,GAAZ,SAAYA,GACRA,EAAA,eACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,oBACH,EALD,CAAYA,MAAW,K,SAOPC,EAAcC,EAAgCC,GAC1D,MAAMC,EAAW,CACb,CAACJ,EAAYK,MAAM,IAAIC,EAAQJ,EAAOC,GACtC,CAACH,EAAYO,OAAO,IAAIC,EAASN,EAAOC,GACxC,CAACH,EAAYS,SAAS,IAAIC,EAAWR,EAAOC,GAC5C,CAACH,EAAYW,IAAI,IAAIC,EAAMV,EAAOC,IAEtC,OAAOC,EAASD,EAAMU,MAAMC,KAChC,CAEA,MAAeC,EAIX,WAAAC,CAAYC,EAA2BC,GACnCC,KAAKC,cAAgBH,EACrBE,KAAKhB,MAAQe,C,CAGjB,GAAAJ,GAAG,EAGP,MAAMN,UAAiBO,EAEnB,GAAAD,GACI,MAAMO,EAAU,IAAIC,MACpBD,EAAQE,IAAMJ,KAAKhB,MAAMqB,WACzBH,EAAQI,OAAS,KACbN,KAAKC,cAAcM,UAAUL,EAASF,KAAKhB,MAAMwB,EAAGR,KAAKhB,MAAMyB,EAAET,KAAKhB,MAAM0B,MAAMV,KAAKhB,MAAM2B,OAAO,C,EAKhH,MAAMxB,UAAgBS,EAElB,GAAAD,GACIK,KAAKC,cAAcW,UAAYZ,KAAKhB,MAAM6B,cAAcD,UACxDZ,KAAKC,cAAca,KAAOd,KAAKhB,MAAM6B,cAAcC,KACnDd,KAAKC,cAAcc,UAAYf,KAAKhB,MAAM6B,cAAcE,UACxDf,KAAKC,cAAce,SAAShB,KAAKhB,MAAMqB,WAAYL,KAAKhB,MAAMwB,EAAGR,KAAKhB,MAAMyB,E,EAIpF,MAAMhB,UAAcG,EAEhB,GAAAD,GACIsB,QAAQC,IAAIlB,KAAKhB,M,EAIzB,MAAMO,UAAmBK,EAErB,GAAAD,GACIsB,QAAQC,IAAIlB,KAAKhB,M,EC9DzB,MAAMmC,EAAiB,uB,MCQVC,EAAW,M,yFAiBY,Q,YAKR,G,gBAMJ,I,CAJtB,kBAAAC,GACErB,KAAKsB,Y,CAMP,iBAAAC,GACEvB,KAAKwB,GAAGC,MAAMd,OAASX,KAAKW,OAC5BX,KAAKwB,GAAGC,MAAMf,MAAQV,KAAKU,MAC3BV,KAAKjB,OAASiB,KAAK0B,iBAEnB1B,KAAKwB,GAAGG,YAAY3B,KAAKjB,O,CAI3B,cAAA2C,GACE1B,KAAKjB,OAAS6C,SAASC,cAAc,UACrC7B,KAAK8B,iBACL,OAAO9B,KAAKjB,M,CAGd,cAAA+C,GACE9B,KAAKjB,OAAO4B,OAASX,KAAKwB,GAAGO,aAC7B/B,KAAKjB,OAAO2B,MAAQV,KAAKwB,GAAGQ,W,CAG9B,UAAAV,GACK,MAAMW,EAAMjC,KAAKjB,OAAOmD,WAAW,MACnC,IAAIC,EAAOnC,KAAKoC,OAChBD,EAAKE,SAAQtC,IACXjB,EAAamD,EAAIlC,EAAE,G"}