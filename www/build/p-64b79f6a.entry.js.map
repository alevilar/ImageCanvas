{"version":3,"names":["imageCanvasCss","ImageCanvas","this","centerText","componentWillLoad","canvas","__createCanvas","console","info","el","appendChild","img","Image","addEventListener","imgLoading","ctx","getContext","drawImage","__loadData","src","bgImg","document","createElement","height","hCanvas","width","wCanvas","data","content","forEach","item","type","iText","fillStyle","canvasOptions","canvasFillStyle","font","fontCanvas","textAlign","fillText","any_string","x","y","imgData","onload"],"sources":["src/components/image-canvas/image-canvas.css?tag=image-canvas","src/components/image-canvas/image-canvas.tsx"],"sourcesContent":[":host {\n  display: block;\n}","import { Component, Prop,State, Element } from '@stencil/core';\nimport { ContentDataImg, ContentDataText } from '../type';\n\n@Component({\n  tag: 'image-canvas',\n  styleUrl: 'image-canvas.css',\n})\nexport class ImageCanvas {\n\n  @Element() el: HTMLElement\n\n  @Prop() bgImg!: string \n  \n  /**\n   * With\n   */\n  @Prop() wCanvas: number\n\n  /**\n   * Height\n   */\n  @Prop() hCanvas: number\n\n\n  /**\n   * Canvas fillStroke\n   */\n  @Prop() canvasFillStyle: string = 'black'\n\n  /**\n   * canvas.font  string style\n   */\n\n\n  @Prop() fontCanvas:string = 'bold 12p Arial'\n  \n  \n  /**\n   * canvas.content \n   */\n  @Prop() content: ContentDataText[]|ContentDataImg[]\n\n  @State() imgLoading = true;\n\n  private canvas: HTMLCanvasElement\n  private centerText: string = 'start'\n\n  componentWillLoad(){\n    this.canvas = this.__createCanvas();\n    console.info(\"el canvas es\", this.canvas)\n    this.el.appendChild(this.canvas)\n    const img = new Image();\n    img.addEventListener('load', () =>  {\n      this.imgLoading = false\n      const ctx = this.canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      this.__loadData() \n    })\n    img.src = this.bgImg;\n  }\n\n\n  __createCanvas() {\n    const canvas = document.createElement('canvas')\n    canvas.height = this.hCanvas\n    canvas.width = this.wCanvas\n    return canvas\n  }\n\n  __loadData() {\n       const ctx = this.canvas.getContext('2d');\n       const data = this.content\n       data.forEach(item => {\n         if( item.type ==='text' ){\n            const iText = item as ContentDataText\n            ctx.fillStyle = iText.canvasOptions.fillStyle || this.canvasFillStyle;\n            ctx.font = iText.canvasOptions.font || this.fontCanvas;\n            ctx.textAlign = iText.canvasOptions.textAlign as CanvasTextAlign || this.centerText as CanvasTextAlign;\n            ctx.fillText(item.any_string, item.x, item.y);\n         }\n         if( item.type ==='image' ){\n           const imgData = new Image();\n           imgData.src = item.any_string;\n           imgData.onload = function() {\n               ctx.drawImage(imgData, item.x, item.y,item.width,item.height);\n           };\n         }\n       });\n  }\n\n}\n"],"mappings":"2CAAA,MAAMA,EAAiB,uB,MCOVC,EAAW,M,yBAsCdC,KAAAC,WAAqB,Q,wFAlBK,Q,gBAON,iB,uCAQN,I,CAKtB,iBAAAC,GACEF,KAAKG,OAASH,KAAKI,iBACnBC,QAAQC,KAAK,eAAgBN,KAAKG,QAClCH,KAAKO,GAAGC,YAAYR,KAAKG,QACzB,MAAMM,EAAM,IAAIC,MAChBD,EAAIE,iBAAiB,QAAQ,KAC3BX,KAAKY,WAAa,MAClB,MAAMC,EAAMb,KAAKG,OAAOW,WAAW,MACnCD,EAAIE,UAAUN,EAAK,EAAG,GACtBT,KAAKgB,YAAY,IAEnBP,EAAIQ,IAAMjB,KAAKkB,K,CAIjB,cAAAd,GACE,MAAMD,EAASgB,SAASC,cAAc,UACtCjB,EAAOkB,OAASrB,KAAKsB,QACrBnB,EAAOoB,MAAQvB,KAAKwB,QACpB,OAAOrB,C,CAGT,UAAAa,GACK,MAAMH,EAAMb,KAAKG,OAAOW,WAAW,MACnC,MAAMW,EAAOzB,KAAK0B,QAClBD,EAAKE,SAAQC,IACX,GAAIA,EAAKC,OAAQ,OAAQ,CACtB,MAAMC,EAAQF,EACdf,EAAIkB,UAAYD,EAAME,cAAcD,WAAa/B,KAAKiC,gBACtDpB,EAAIqB,KAAOJ,EAAME,cAAcE,MAAQlC,KAAKmC,WAC5CtB,EAAIuB,UAAYN,EAAME,cAAcI,WAAgCpC,KAAKC,WACzEY,EAAIwB,SAAST,EAAKU,WAAYV,EAAKW,EAAGX,EAAKY,E,CAE9C,GAAIZ,EAAKC,OAAQ,QAAS,CACxB,MAAMY,EAAU,IAAI/B,MACpB+B,EAAQxB,IAAMW,EAAKU,WACnBG,EAAQC,OAAS,WACb7B,EAAIE,UAAU0B,EAASb,EAAKW,EAAGX,EAAKY,EAAEZ,EAAKL,MAAMK,EAAKP,O"}