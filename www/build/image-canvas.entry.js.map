{"file":"image-canvas.entry.esm.js","mappings":"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","names":[],"sources":["src/utils/CanvasSetters.ts","src/components/image-canvas/image-canvas.css?tag=image-canvas","src/components/image-canvas/image-canvas.tsx"],"sourcesContent":["import { ContentDataBarcode, ContentDataImg, ContentDataQR, ContentDataText, Layer } from \"../components/type\";\n\nexport enum OpcionTypes {\n    text= \"text\",\n    image = \"image\",\n    qr = \"qr\",\n    barcode = \"barcode\"\n}\n\nexport function canvasSetter( canvas:CanvasRenderingContext2D,layer:Layer ){\n    const mapeador = {\n        [OpcionTypes.text]:new SetText(canvas,layer as ContentDataText),\n        [OpcionTypes.image]:new SetImage(canvas,layer as ContentDataImg),\n        [OpcionTypes.barcode]:new SetBarcode(canvas,layer as ContentDataBarcode),\n        [OpcionTypes.qr]:new SetQR(canvas,layer as ContentDataQR)\n    }\n    return mapeador[layer.type].run()\n}\n\nabstract class SeteoTipoCanvas {\n    canvasContent: CanvasRenderingContext2D;\n    layer: Layer;\n\n    constructor(c:CanvasRenderingContext2D,l:Layer){\n        this.canvasContent = c;\n        this.layer = l;\n    }\n\n    run():void{}\n}\n\nclass SetImage extends SeteoTipoCanvas{\n    layer: ContentDataImg\n    run(){\n        console.info('entrooo')\n        const imgData = new Image();\n        imgData.src = this.layer.any_string;\n        imgData.onload = ()=> {\n            this.canvasContent.drawImage(imgData, this.layer.x, this.layer.y,this.layer.width,this.layer.height);\n        };\n    }\n}\n\nclass SetText extends SeteoTipoCanvas{\n    layer: ContentDataText\n    run(){\n        this.canvasContent.fillStyle = this.layer.canvasOptions.fillStyle;\n        this.canvasContent.font = this.layer.canvasOptions.font;\n        this.canvasContent.textAlign = this.layer.canvasOptions.textAlign as CanvasTextAlign;\n        this.canvasContent.fillText(this.layer.any_string, this.layer.x, this.layer.y);\n    }\n}\n\nclass SetQR extends SeteoTipoCanvas{\n    layer: ContentDataQR\n    run(){\n        console.log(this.layer)\n    }\n}\n\nclass SetBarcode extends SeteoTipoCanvas{\n    layer: ContentDataBarcode\n    run(){\n        console.log(this.layer)\n    }\n}\n\n\n",":host {\n  display: block;\n}","import { Component, Prop,State, Element, Watch } from '@stencil/core';\nimport { Layer } from '../type';\nimport { canvasSetter } from '../../utils/CanvasSetters';\n\n@Component({\n  tag: 'image-canvas',\n  styleUrl: 'image-canvas.css',\n})\nexport class ImageCanvas {\n\n  @Element() el: HTMLElement\n\n  /**\n   * Width en px\n   */\n  @Prop() width: string\n\n  /**\n   * Height en px\n   */\n  @Prop() height: string\n\n  /**\n   * Canvas fillStroke\n   */\n  @Prop() canvasFillStyle: string = 'black'\n\n  /**\n   * canvas.content \n   */\n  @Prop() layers: Layer[] = []\n  @Watch('layers')\n  handlerLayerChange(){\n    console.info('entrooo')\n\n    this.__loadData()\n  }\n\n  @State() imgLoading = true;\n  private canvas: HTMLCanvasElement\n\n  componentWillLoad(){\n    this.el.style.height = this.height\n    this.el.style.width = this.width\n    this.canvas = this.__createCanvas();\n\n    this.el.appendChild(this.canvas)\n    this.__loadData()\n  }\n\n  __createCanvas() {\n    this.canvas = document.createElement('canvas')\n    this.__resizeCanvas();\n    return this.canvas\n  }\n\n  __resizeCanvas(){\n    this.canvas.height = this.el.offsetHeight;\n    this.canvas.width = this.el.offsetWidth;\n  }\n\n  __loadData() {\n    console.info('entrooo')\n\n       const ctx = this.canvas.getContext('2d');\n       let data = this.layers;\n       data.forEach(l => {\n         canvasSetter(ctx,l)\n       });\n  }\n\n}\n"],"version":3}